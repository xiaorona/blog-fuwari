---
// src/layouts/Layout.astro
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/700.css";
import { profileConfig, siteConfig } from "../config";
import MainGridLayout from "./MainGridLayout.astro";

// 类型定义
interface Props {
  title?: string;
  description?: string;
  banner?: string;
  lang?: string;
}

const { title, description, banner, lang } = Astro.props;
const isHomePage = Astro.url.pathname === '/';

// 页面标题处理
const pageTitle = title 
  ? `${title} | ${siteConfig.title}` 
  : siteConfig.title;

// 横幅图片处理
const bannerSrc = banner || siteConfig.banner.src;
---

<!DOCTYPE html>
<html lang={lang || siteConfig.lang} class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{pageTitle}</title>
  <meta name="description" content={description || siteConfig.subtitle} />
  
  <!-- 主题色控制 -->
  <meta name="theme-color" content={`hsl(${siteConfig.themeColor.hue}, 80%, 60%)`} />
  
  <!-- 社交标签 -->
  <meta property="og:title" content={pageTitle} />
  <meta property="og:description" content={description || siteConfig.subtitle} />
  <meta property="og:type" content="website" />
  <meta property="og:image" content={new URL(bannerSrc, Astro.site).href} />

  <!-- 引入主题样式 -->
  <link rel="stylesheet" href="/styles/theme.css" />
</head>

<body class="bg-bg-color text-text-color transition-colors">
  <!-- 主布局结构 -->
  <MainGridLayout>
    <!-- 横幅区域 -->
    {siteConfig.banner.enable && (
      <div id="banner" class="h-48 w-full bg-cover bg-center"
           style={{ backgroundImage: `url(${bannerSrc})` }} />
    )}

    <!-- 内容区域 -->
    <main class="container mx-auto px-4 py-8 max-w-4xl">
      <slot />  <!-- Markdown 内容会注入到这里 -->
    </main>

    <!-- 页脚 -->
    <footer class="mt-12 py-6 border-t border-gray-200 dark:border-gray-800 text-center">
      <p>© {new Date().getFullYear()} {profileConfig.name}</p>
    </footer>
  </MainGridLayout>

  <!-- 客户端交互脚本 -->
  <script is:inline>
    // 主题切换逻辑
    const savedTheme = localStorage.getItem('theme') || 'auto';
    if (savedTheme === 'dark' || (savedTheme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    }
  </script>
</body>
</html>

<style is:global>
  /* 全局样式 */
  :root {
    --bg-color: #ffffff;
    --text-color: #333333;
  }
  .dark {
    --bg-color: #1a1a1a;
    --text-color: #f0f0f0;
  }
  
  /* 友链卡片样式 */
  .friendlink-card {
    @apply flex items-center gap-4 p-4 rounded-lg;
    @apply bg-gray-100 dark:bg-gray-800 hover:shadow-md transition-all;
  }
  .friendlink-grid {
    @apply grid grid-cols-1 md:grid-cols-2 gap-4 my-8;
  }
</style>
